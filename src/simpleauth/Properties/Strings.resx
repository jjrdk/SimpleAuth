<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessToAddressInformation" xml:space="preserve">
    <value>Access to address information.</value>
  </data>
  <data name="AccessToEmailAddresses" xml:space="preserve">
    <value>Access to email addresses.</value>
  </data>
  <data name="AccessToOpenIdScope" xml:space="preserve">
    <value>Access to the OpenId scope.</value>
  </data>
  <data name="AccessToPhoneInformation" xml:space="preserve">
    <value>Access to phone information.</value>
  </data>
  <data name="AccessToProfileInformation" xml:space="preserve">
    <value>Access to the profile information.</value>
  </data>
  <data name="AccessToRoles" xml:space="preserve">
    <value>Access to your roles.</value>
  </data>
  <data name="Badrequest" xml:space="preserve">
    <value>Bad Request</value>
  </data>
  <data name="CouldNotDeleteClient" xml:space="preserve">
    <value>Could not delete client</value>
  </data>
  <data name="CouldNotUpdateApproval" xml:space="preserve">
    <value>Could not update approval for ticket {0}</value>
  </data>
  <data name="DeleteFailed" xml:space="preserve">
    <value>Delete failed</value>
  </data>
  <data name="DuplicateResourceOwner" xml:space="preserve">
    <value>A resource owner with same credentials already exists</value>
  </data>
  <data name="FailedToAddUser" xml:space="preserve">
    <value>Failed to add user</value>
  </data>
  <data name="Http400" xml:space="preserve">
    <value>The HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).</value>
  </data>
  <data name="Http401" xml:space="preserve">
    <value>The HTTP 401 Unauthorized client error status response code indicates that the request has not been applied because it lacks valid authentication credentials for the target resource.</value>
  </data>
  <data name="Http404" xml:space="preserve">
    <value>The HTTP 404 Not Found client error response code indicates that the server can't find the requested resource.</value>
  </data>
  <data name="Http500" xml:space="preserve">
    <value>The HyperText Transfer Protocol (HTTP) 500 Internal Server Error server error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.</value>
  </data>
  <data name="IdentifierIsMissing" xml:space="preserve">
    <value>Identifier is missing</value>
  </data>
  <data name="InputMissing" xml:space="preserve">
    <value>Input missing</value>
  </data>
  <data name="InternalServerError" xml:space="preserve">
    <value>Internal Server Error</value>
  </data>
  <data name="InvalidResource" xml:space="preserve">
    <value>Invalid resource</value>
  </data>
  <data name="InvalidUser" xml:space="preserve">
    <value>Invalid user</value>
  </data>
  <data name="ManageServerResources" xml:space="preserve">
    <value>Manage server resources.</value>
  </data>
  <data name="ManageUma" xml:space="preserve">
    <value>Manage user managed resources and policies.</value>
  </data>
  <data name="NoParameterInBodyRequest" xml:space="preserve">
    <value>No parameter in body request</value>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>Not Found</value>
  </data>
  <data name="ParameterInRequestBodyIsNotValid" xml:space="preserve">
    <value>Parameter in request body not valid</value>
  </data>
  <data name="RegisterAClient" xml:space="preserve">
    <value>Register a client</value>
  </data>
  <data name="ResourceCannotBeUpdated" xml:space="preserve">
    <value>Resource cannot be updated</value>
  </data>
  <data name="ResourceOwnerCredentialsAreNotCorrect" xml:space="preserve">
    <value>The resource owner credentials are not correct</value>
  </data>
  <data name="ResourceSetIdParameterNeedsToBeSpecified" xml:space="preserve">
    <value>The parameter resource_set_id needs to be specified</value>
  </data>
  <data name="TheClaimMustBeSpecified" xml:space="preserve">
    <value>The claim must be specified</value>
  </data>
  <data name="TheClientIdDoesntExist" xml:space="preserve">
    <value>The client id {0} doesn't exist</value>
  </data>
  <data name="TheConfirmationCodeMustBeSpecified" xml:space="preserve">
    <value>The confirmation code must be specified</value>
  </data>
  <data name="TheConsentCannotBeDeleted" xml:space="preserve">
    <value>The consent cannot be deleted</value>
  </data>
  <data name="TheFilterRuleFailed" xml:space="preserve">
    <value>The filter rule '{0}' failed</value>
  </data>
  <data name="TheIdentifierMustBeSpecified" xml:space="preserve">
    <value>The identifier must be specified</value>
  </data>
  <data name="TwoFactorNotProperlyConfigured" xml:space="preserve">
    <value>Two factor authenticator is not properly configured</value>
  </data>
  <data name="Unauthorized" xml:space="preserve">
    <value>Unauthorized</value>
  </data>
  <data name="Unknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="UpdateFailed" xml:space="preserve">
    <value>Update Failed</value>
  </data>
</root>